Hello friends!  I see you finally found us. :)  Expect more details next
month at XDC 2018, "Reimagining i965"/"Optimizing i965 for the Future"...

Anywhere // appears in the code base, that is a TODO comment.
(Only C style comments should remain!)

- Unjam DRI3 (glxgears stops, runs out of backbuffers and waits forever)
- Compute shaders (Kayden has a WIP branch)
- Seqno tracking system (ickle has a WIP branch)
- Fence implementation (not started, may need seqno tracking, or drm syncobjs)
- Turn binder into a ring buffer (needs seqno, ickle has a WIP branch)
  (Until this happens we hit stalls recycling active addresses.)
- Queries (not started - needs seqno tracking?)
- Conditional rendering (not started - needs queries)

- Gen8, Gen10, Gen11 support (not started)

- arb_vertex_attrib_64bit - iris_set_vertex_elements() is getting called
  with num_inputs == 5 when it should be 3.  The issue is that
  vs_dual_locations is set in the NirOptions, causing nir_gather_info
  to count each dual slot value as two bits instead of one in the
  double_inputs_read bitfield, which then causes st_program.c to
  quad count those inputs instead of double count them.

- Auxiliary surfaces (not started - Nanley has ideas)
- Do proper pre-draw resolves/flushes (drop PIPE_CONTROLs in iris_draw.c)

- Compact binding tables for SSBOs/atomics (currently wasteful)

- Shader Precompiles
- Shader Disk Cache

- u_threaded_context (not started)

- BLORP in a separate render batch (someday)
- Stencil PMA (not started)

- Transform feedback info from st/nir is crazy (the wrong stage!)

- Gallium doesn't support separate Z and S surfaces...i965 does...
  AMD can't do them, NVIDIA apparently disallows Z24 + S8...
  https://gitlab.freedesktop.org/mesa/mesa/blob/master/src/mesa/state_tracker/st_cb_fbo.c#L703
  https://gitlab.freedesktop.org/mesa/mesa/blob/master/src/gallium/include/pipe/p_state.h#L373

- Use R32G32B32 and promote to R32G32B32X32 on first render?

- PBO upload in Gallium may be inefficient
  - We seem to get R32G32B32A32_FLOAT temporaries for upload
  - ickle says u_default_texture_subdata does a double copy

- ReadPixels with GL_STENCIL_INDEX and a GL_DEPTH_STENCIL buffer
  falls back to software even though we could totally blit

- CopyImage goes through a pile of st code, to eventually land in blit().
  Don't want this.  Just want it to call blorp_copy right away.  See:
  https://lists.freedesktop.org/archives/mesa-dev/2015-July/089387.html

- Use util_try_blit_via_copy_region in iris_blit?

- Fix isl_tiled_memcpy streaming loads - ickle says it isn't recognizing
  the proper streaming function, so it's not working.
